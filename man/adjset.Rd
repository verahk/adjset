% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{adjset}
\alias{adjset}
\alias{areDescendants}
\alias{areAncestors}
\alias{areReachable}
\alias{find_nearest_adjset}
\title{Identify adjustment sets}
\usage{
areDescendants(G, nodes)

areAncestors(G, nodes)

areReachable(G, x, Z, A)

find_nearest_adjset(Gx, x, Z, A)

adjset(G, x, y, name, dmat = matrix(0))
}
\arguments{
\item{G}{a n-by-n adjacency matrix of a graph. \code{G[x, y] = 1} if there is an edge from node \code{x} to \code{y}, zero otherwise.}

\item{x, y}{(integer)
column position of the cause and effect variable, respectively (using zero-based index, from 0 to n-1).}

\item{Z}{(integer vector)
column positions of conditioning variables (using zero-based index, from 0 to n-1).}

\item{A}{(logical vector)
indicates the subset of nodes paths must be contained in.
The search along a path ends if visiting a node \code{i} such that \code{A[i] = FALSE}.}

\item{Gx}{the backdoor graph of \code{G} w.r.t. \code{x}.}

\item{name}{(string) name of adjustment set, see details.}

\item{dmat}{(optional) a n-by-n adjacency matrix such that \code{dmat(x, y) = 1} if \code{x} is an ancestor of \code{y} in \code{G}.
Added as an optional argument for speed. If not specified, \code{areDescendants} and \code{areAncestors} are called to
identify the relevant relationships.}
}
\value{
\itemize{
\item \code{areDescendants}: a logical \code{n}-length vector indicating which nodes are descendants of \code{nodes}.
}

\itemize{
\item \code{areAncestor}: a logical \code{n}-length vector indicating which nodes are ancestors of \code{nodes}.
}

\itemize{
\item \code{areReachable}: a logical vector indicating which nodes in \code{G} can be reached from \code{x}
through active paths that traverses only nodes in \code{A} conditional on \code{Z}.
}

\itemize{
\item \code{find_nearest_adjset}: The subset of Z nearest \code{x} valid for adjustment (assuming Z is a valid adjusment set).
}

\itemize{
\item \code{adjset}: an integer vector with the (zero-indexed) column positions of an adjustment set as given by \code{name}.
}
}
\description{
Identify different sets of nodes in a DAG valid for adjustment with respect to
a cause node X and a effect node Y. Based on Zander and Li≈õkiewicz (2020) algorithm
for finding (minimal) separators and a modified Algorithm 3.1 in Koller (2009, p. 75)
for finding reachable nodes.
}
\details{
The function \code{areReachable} implements Algorithm 3.1 in Koller (2009, p. 75) and
identifies nodes in \code{G} reachable from \code{x} given \code{Z} via active trails in \code{G}, with the restriction
that all nodes on the trail are in \code{A}.

The function \code{find_nearest_adjset} assumes \code{Z} is a set of nodes separating \code{x} and \code{y} in \code{Gx}, and returns the
subset of \code{Z} reachable from \code{x} given \code{Z}, that is the subset of \code{Z} closest to \code{x}.
A minimal separator is found by applying \code{find_nearest_adjset} again w.r.t \code{y} and the reduced set.

The function \code{adjset} applies these algorithms to identify different adjustment set:
\itemize{
\item "o": The optimal adjustment set (o-set). If \code{A} is the set of joint ancestors of \code{x} and \code{y} and \code{Z} equals \code{A}
minus any descendant of \code{x}, the o-set includes all nodes that can be reached from \code{y} via active paths in \code{A}
given \code{Z}. That is the subset of \code{Z} closest to \code{y} on every path ending with an arrow into \code{y}.
\item "o-min": The minimal O-set. The subset of the o-set reachable from \code{x}, i.e. a minimal separator of \code{x} and \code{y} in the backdoor graph.
\item "pa-min": The minimal parent set. The subset of the parents of \code{x} reachable from \code{y},
i.e. i.e. a minimal separator of \code{x} and \code{y} in the backdoor graph.
}

These adjustment sets are defined only when \code{x} is ancestor of \code{y}.
If that is not the case, the function returns \code{y} indicating that \code{x} has no effect on \code{y}.
Additionally,
\itemize{
\item "pa": the set of parents of \code{x}, read of \code{G} directly, independently of wheter \code{x} is an ancestor of \code{y}.
\item "pa-if": if \code{y} is a descendant of \code{x}, then the set of parents is returned. Otherwise the function returns \code{y}.
}

For other values of \code{name} the function returns either \code{y} or \code{Z} (the joint set of descendants of \code{x} and \code{y} minus descendants of \code{x}),
which is itself a valid adjustment set.
}
